--Criação de um banco de dados:
CREATE DATABASE AB_AVALIACAO_WILLIAM_FERNANDES_DORANTE

--Configuração para usar o banco de dados recém-criado:
USE AB_AVALIACAO_WILLIAM_FERNANDES_DORANTE

--Criação da tabela PESSOAS:
CREATE TABLE PESSOAS(
    CPF                 VARCHAR(11)     PRIMARY KEY,
    NOME                VARCHAR(50)     NOT NULL,
    LOGRADOURO          VARCHAR(150)    NOT NULL,
    TELEFONE            VARCHAR(12),
    LIMITE_CREDITO      NUMERIC(17, 2)  NOT NULL DEFAULT 0,
    OBVERVACAO          VARCHAR(100)
)

--Criação da tabela EMPRESTIMOS:
CREATE TABLE EMPRESTIMOS(
    NUMERO_CONTRATO VARCHAR(8), 
    CPF             VARCHAR(11),
    DATA            DATE NOT NULL,
    VALOR           NUMERIC(17, 2)  NOT NULL DEFAULT 0

    CONSTRAINT PK_EMPRESTIMO PRIMARY KEY (NUMERO_CONTRATO, CPF),
    CONSTRAINT FK_PESSOA     FOREIGN KEY (CPF) REFERENCES PESSOAS(CPF)
)

--Criação da tabela PAGAMENTOS:
CREATE TABLE PAGAMENTOS(
    NUMERO_CONTRATO VARCHAR(8), 
    CPF             VARCHAR(11),
    DATA            DATE NOT NULL,
    VALOR           NUMERIC(17, 2)  NOT NULL DEFAULT 0

    CONSTRAINT PK_PAGAMENTO  PRIMARY KEY (NUMERO_CONTRATO, CPF),
    CONSTRAINT FK_EMPRESTIMO FOREIGN KEY (NUMERO_CONTRATO, CPF) REFERENCES EMPRESTIMOS(NUMERO_CONTRATO, CPF)
)

--Questão - 1: 
INSERT INTO PESSOAS (CPF, NOME, LOGRADOURO, TELEFONE, LIMITE_CREDITO, OBVERVACAO)
VALUES              ('11111111111', 'William Fernandes Dorante', 'Rio Claro', '19999999999', 10000, NULL)

INSERT INTO PESSOAS (CPF, NOME, LOGRADOURO, TELEFONE, LIMITE_CREDITO, OBVERVACAO)
VALUES              ('22222222222', 'Alan Wake', 'Columbus', '44988888888', 10000, NULL)

INSERT INTO PESSOAS (CPF, NOME, LOGRADOURO, TELEFONE, LIMITE_CREDITO, OBVERVACAO)
VALUES              ('33333333333', 'Lewis Capaldi', 'Rio de Janeiro', '21977777777', 10000, NULL)

INSERT INTO PESSOAS (CPF, NOME, LOGRADOURO, TELEFONE, LIMITE_CREDITO, OBVERVACAO)
VALUES              ('44444444444', 'Leon S. Kennedy', 'São Paulo', '66966666666', 10000, NULL)

INSERT INTO PESSOAS (CPF, NOME, LOGRADOURO, TELEFONE, LIMITE_CREDITO, OBVERVACAO)
VALUES              ('55555555555', 'Thiago Nigro', 'Belo Horizonte', '32955555555', 10000, NULL)

--Questão - 2:
UPDATE  PESSOAS 
SET     LIMITE_CREDITO = 1000
WHERE   CPF = '11111111111' OR
        CPF = '44444444444'

--Questão - 3:
DELETE 
FROM    PESSOAS
WHERE   CPF = '22222222222'

--Questão - 4:
INSERT INTO EMPRESTIMOS (NUMERO_CONTRATO, CPF, DATA, VALOR)
VALUES                  ('18888888', '11111111111', '2001-05-01', 200)

INSERT INTO EMPRESTIMOS (NUMERO_CONTRATO, CPF, DATA, VALOR)
VALUES                  ('28888888', '33333333333', '2002-05-02', 1000)

INSERT INTO EMPRESTIMOS (NUMERO_CONTRATO, CPF, DATA, VALOR)
VALUES                  ('38888888', '44444444444', '2003-05-03', 14000)

INSERT INTO EMPRESTIMOS (NUMERO_CONTRATO, CPF, DATA, VALOR)
VALUES                  ('48888888', '55555555555', '2004-05-04', 51000)

--Questão - 5:
UPDATE  EMPRESTIMOS
SET     DATA = '2002-10-02'
WHERE   CPF = '33333333333' AND 
        NUMERO_CONTRATO = '28888888'

--Questão - 6:
SELECT  NUMERO_CONTRATO, CPF
FROM    EMPRESTIMOS
WHERE   VALOR > 1000

--Questão - 7:
SELECT      SUM(VALOR) AS TOTAL
FROM        EMPRESTIMOS
WHERE       EMPRESTIMOS.DATA BETWEEN '2001-01-01' AND '2011-01-10'

--Questão - 8:
SELECT      PESSOAS.NOME
FROM        PESSOAS
LEFT JOIN   EMPRESTIMOS
ON          PESSOAS.CPF = EMPRESTIMOS.CPF
WHERE       EMPRESTIMOS.CPF IS NULL

--Questão - 9:
SELECT      PESSOAS.NOME, PESSOAS.LIMITE_CREDITO
FROM        PESSOAS
INNER JOIN  EMPRESTIMOS
ON          PESSOAS.CPF = EMPRESTIMOS.CPF
WHERE       EMPRESTIMOS.VALOR > 1000.01

--Questão - 10:
SELECT      NUMERO_CONTRATO, CPF, DATA, VALOR
FROM        EMPRESTIMOS
ORDER BY    DATA, VALOR

--Questão - 11:
SELECT      NUMERO_CONTRATO, EMPRESTIMOS.CPF, DATA, VALOR
FROM        EMPRESTIMOS
INNER JOIN  PESSOAS
ON          EMPRESTIMOS.CPF = PESSOAS.CPF
WHERE       PESSOAS.LOGRADOURO = 'São Paulo'

--Questão - 12:
SELECT      LIMITE_CREDITO, COUNT(CPF) AS TOTAL
FROM        PESSOAS
GROUP BY    LIMITE_CREDITO

--Questão - 13:
CREATE      VIEW VW_PESSOAS_EMPRESTIMO_MAIOR_LIMITE AS
SELECT      PESSOAS.NOME, PESSOAS.CPF
FROM        PESSOAS
INNER JOIN  EMPRESTIMOS
ON          PESSOAS.CPF = EMPRESTIMOS.CPF
WHERE       EMPRESTIMOS.VALOR > PESSOAS.LIMITE_CREDITO

SELECT      CPF
FROM        VW_PESSOAS_EMPRESTIMO_MAIOR_LIMITE

--Questão - 14:
DELETE 
FROM    EMPRESTIMOS
WHERE   NUMERO_CONTRATO = '18888888' AND
        CPF = '11111111111'

--Questão - 15:
CREATE PROCEDURE P_SALVAR_EMPRESTIMO
(@NUMERO_CONTRATO   VARCHAR(8),
 @CPF               VARCHAR(11),
 @DATA              DATE,
 @VALOR             NUMERIC(17, 2))
AS
BEGIN 
    IF((SELECT  LIMITE_CREDITO 
        FROM    PESSOAS 
        WHERE   CPF = @CPF) >= @VALOR)
        BEGIN
            INSERT INTO EMPRESTIMOS (NUMERO_CONTRATO, CPF, DATA, VALOR)
            VALUES                  (@NUMERO_CONTRATO, @CPF, @DATA, @VALOR)

            UPDATE  PESSOAS 
            SET     LIMITE_CREDITO = LIMITE_CREDITO - @VALOR
            WHERE   CPF = @CPF
        
            SELECT 'A operação executou com êxito.' AS MENSAGEM
        END
    ELSE
        BEGIN
            SELECT 'A operação falhou em executar.' AS MENSAGEM
        END
END

--Questão - 16:
EXEC P_SALVAR_EMPRESTIMO '58888888', '11111111111', '2021-11-01', 500   --  < LIMITE_CREDITO
EXEC P_SALVAR_EMPRESTIMO '68888888', '44444444444', '2021-11-01', 15000 -- >= LIMITE_CREDITO
EXEC P_SALVAR_EMPRESTIMO '78888888', '55555555555', '2021-10-31', 20000 -- >= LIMITE_CREDITO

SELECT  NUMERO_CONTRATO, CPF, DATA, VALOR
FROM    EMPRESTIMOS

SELECT  CPF, LIMITE_CREDITO
FROM    PESSOAS
WHERE   CPF = '11111111111' OR
        CPF = '44444444444' OR
        CPF = '55555555555'

--Questão - 17:
CREATE TRIGGER TRG_SALVAR_PAGAMENTO ON PAGAMENTOS FOR INSERT
AS
BEGIN
    UPDATE      PESSOAS
    SET         LIMITE_CREDITO = LIMITE_CREDITO + INSERTED.VALOR
    FROM        PESSOAS
    INNER JOIN  INSERTED
    ON          PESSOAS.CPF = INSERTED.CPF 
END

--DROP TRIGGER TRG_SALVAR_PAGAMENTO

--Questão - 18:
INSERT INTO PAGAMENTOS (NUMERO_CONTRATO, CPF, DATA, VALOR)
VALUES                 ('58888888', '11111111111', GETDATE(), 500)

SELECT  CPF, LIMITE_CREDITO
FROM    PESSOAS
WHERE   CPF = '11111111111'

--Questão - 19:
CREATE TABLE LOG_EMPRESTIMOS(
    ID                  INT             IDENTITY(1,1),
    NUMERO_CONTRATO     VARCHAR(8), 
    CPF                 VARCHAR(11),
    DATA                DATE NOT NULL,
    VALOR               NUMERIC(17, 2)  NOT NULL DEFAULT 0,
    DATA_INCLUSAO       DATE,
    USUARIO_INCLUSAO    VARCHAR(128), 
    DATA_ALTERACAO      DATE,
    USUARIO_ALTERACAO   VARCHAR(128)

    CONSTRAINT PK_LOG_EMPRESTIMO    PRIMARY KEY (ID),
    CONSTRAINT FK_LOG_PESSOA        FOREIGN KEY (CPF) REFERENCES PESSOAS (CPF)
)

CREATE TRIGGER TRG_LOG_SALVAR_EMPRESTIMO ON EMPRESTIMOS FOR INSERT
AS
BEGIN
    INSERT INTO LOG_EMPRESTIMOS (NUMERO_CONTRATO, CPF, DATA, VALOR, DATA_INCLUSAO, USUARIO_INCLUSAO)
    VALUES                      ((SELECT NUMERO_CONTRATO FROM INSERTED), (SELECT CPF FROM INSERTED), (SELECT DATA FROM INSERTED), (SELECT VALOR FROM INSERTED), GETDATE(), host_name())
END

CREATE TRIGGER TRG_ALTERAR_EMPRESTIMO ON EMPRESTIMOS FOR UPDATE
AS
BEGIN
    INSERT INTO LOG_EMPRESTIMOS (NUMERO_CONTRATO, CPF, DATA, VALOR, DATA_ALTERACAO, USUARIO_ALTERACAO)
    VALUES                      ((SELECT NUMERO_CONTRATO FROM INSERTED), (SELECT CPF FROM INSERTED), (SELECT DATA FROM INSERTED), (SELECT VALOR FROM INSERTED), GETDATE(), host_name())
END